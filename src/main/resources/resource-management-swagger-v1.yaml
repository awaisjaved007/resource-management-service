swagger: '2.0'
info:
  description: Documentation RMS API v1
  version: '1'
  title: Resource Management System API
host: '192.168.39.74:30008'
basePath: /resource-management/v1
tags:
  - name: caterer-controller
    description: CatererDocument Controller
produces:
  - application/json
paths:
  /caterer:
    post:
      tags:
        - caterer-controller
      summary: saveCaterer
      operationId: saveCatererUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: catererModel
          description: catererModel
          required: true
          schema:
            $ref: '#/definitions/CatererRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseModel'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/caterer/all/{cityName}':
    get:
      tags:
        - caterer-controller
      summary: getCaterersListByCityName
      operationId: getCaterersListByCityNameUsingGET
      produces:
        - application/json
      parameters:
        - name: cityName
          in: path
          description: cityName
          required: true
          type: string
        - name: page
          in: query
          description: page
          required: true
          type: integer
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 0
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CatererListResponseModel'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/caterer/{nameOrId}':
    get:
      tags:
        - caterer-controller
      summary: getCatererByNameOrId
      operationId: getCatererByNameOrIdUsingGET
      produces:
        - application/json
      parameters:
        - name: nameOrId
          in: path
          description: nameOrId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CatererResponseModel'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  CapacityModel:
    type: object
    properties:
      maxGuests:
        type: integer
        format: int32
      minGuests:
        type: integer
        format: int32
    title: CapacityModel
  CatererListResponseModel:
    type: object
    properties:
      caterers:
        $ref: '#/definitions/Page'
      resultDescription:
        type: string
    title: CatererListResponseModel
  CatererModel:
    type: object
    properties:
      capacity:
        $ref: '#/definitions/CapacityModel'
      contact:
        $ref: '#/definitions/ContactModel'
      id:
        type: string
      links:
        $ref: '#/definitions/Links'
      location:
        $ref: '#/definitions/AddressImpl'
      name:
        type: string
    title: CatererModel
  CatererRequestModel:
    type: object
    properties:
      capacity:
        $ref: '#/definitions/CapacityModel'
      contact:
        $ref: '#/definitions/ContactModel'
      location:
        $ref: '#/definitions/AddressImpl'
      name:
        type: string
    title: CatererRequest
  CatererResponseModel:
    type: object
    properties:
      caterer:
        $ref: '#/definitions/CatererModel'
      resultDescription:
        type: string
    title: CatererResponseModel
  ContactModel:
    type: object
    properties:
      emailAddress:
        type: string
      mobileNumber:
        type: string
      phoneNumber:
        type: string
    title: ContactModel
  Links:
    type: object
    properties:
      empty:
        type: boolean
    title: Links
  LocationModel:
    type: object
    properties:
      cityName:
        type: string
      postalCode:
        type: string
      streetNameNumber:
        type: string
    title: AddressImpl
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        $ref: '#/definitions/Sort'
      unpaged:
        type: boolean
    title: Pageable
  Page:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CatererModel'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page«CatererModel»
  ResponseModel:
    type: object
    properties:
      resultDescription:
        type: string
    title: ResponseModel
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort
