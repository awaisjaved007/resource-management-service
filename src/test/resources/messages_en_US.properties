message.model.caterer.save.success=Caterer inserted successfully
message.model.caterer.get.success=Data fetched successfully
message.request.body.name.not.null=name must be provided
message.request.body.name.length=name size range is [1-255]
message.request.body.name.already.exists=Name {0} already exists
message.request.body.capacity.not.null=capacityModel must be provided
message.request.body.capacity.minGuests.not.null=capacityModel[minGuests] must be provided
message.request.body.capacity.minGuests.min.value=capacityModel[minGuests] must be positive
message.request.body.capacity.maxGuests.not.null=capacityModel[maxGuests] must be provided
message.request.body.capacity.maxGuests.min.value=capacityModel[maxGuests] must be positive
message.request.body.capacity.invalid.params=minGuests can't be greater than maxGuests
message.request.body.address.not.null=address must be provided
message.request.body.address.cityName.pattern.invalid=cityName must be alpha characters
message.request.body.address.cityName.not.null=cityName must be provided
message.request.body.address.cityName.length=cityName size range is [1-255]
message.request.body.address.streetNameNumber.not.null=streetNameNumber must be provided
message.request.body.address.streetNameNumber.length=streetNameNumber size range is [1-255]
message.request.body.contact.not.null=contact must br provided
message.request.body.contact.mobileNumber.not.null=mobileNumber must be provided
message.request.body.contact.mobileNumber.length.invalid=mobileNumber size is [5-20]
message.request.body.contact.emailAddress.not.null=emailAddress must be provided        
message.request.body.contact.emailAddress.pattern.invalid=emailAddress is inavlid
message.request.getCaterer.id.is.invalid=nameOrId {0} is invalid
page.number.is.invalid=Page number should be positive
page.size.is.invalid=Page size should be positive
message.getCaterersByCityName.invalid.city.name=No record found for provided city